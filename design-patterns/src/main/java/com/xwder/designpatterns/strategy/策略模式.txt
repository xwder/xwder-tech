1、定义：
　　策略模式定义了一系列的算法，并将每一个算法封装起来，使每个算法可以相互替代，使算法本身和使用算法的客户端分割开来，相互独立。

2、结构：
　　1.策略接口角色IStrategy:用来约束一系列具体的策略算法，策略上下文角色ConcreteStrategy使用此策略接口来调用具体的策略所实现的算法。

　　2.具体策略实现角色ConcreteStrategy:具体的策略实现，即具体的算法实现。

　　3.策略上下文角色StrategyContext:策略上下文，负责和具体的策略实现交互，通常策略上下文对象会持有一个真正的策略实现对象，
    策略上下文还可以让具体的策略实现从其中获取相关数据，回调策略上下文对象的方法。

3、深入理解策略模式：

    策略模式的作用：就是把具体的算法实现从业务逻辑中剥离出来，成为一系列独立算法类，使得它们可以相互替换。

    策略模式的着重点：不是如何来实现算法，而是如何组织和调用这些算法，从而让我们的程序结构更加的灵活、可扩展。

参考：
    https://blog.csdn.net/tugangkai/article/details/88074288